#!/usr/bin/perl -w

# variables for directories and files
my $sor_num = $0;
my $homedir = "/export/home/sdc/team_hyperpolarized/son_of_recon/${sor_num}";
my $bindir  = "${homedir}/bin";
my $datadir = "${homedir}/data/";
my $logdir  = "${homedir}/log";
my $textout = "${logdir}/${sor_num}.txt";
my $log_fname = "${logdir}/${sor_num}_data.log";
my $out_fname = "${logdir}/${sor_num}_out.txt";
my $mrrawdir = "/usr/g/mrraw";
my $mcrroot = "/usr/lib/mathworks/R14/v73";

# Open log file
chdir($logdir);
open(OUT,">${textout}") || die("Error: cannot open ${textout}\n");

if (@ARGV < 1) {
  print(OUT "Error: at least one input argument required\n");
  print(OUT "@ARGV\n");
  print(OUT "<pfile_no> <other> <scan_no> <exam_no> <series_no> <last_image>\n");
  print(OUT "set rhrecon=309\n");
  close(OUT);
  exit(-1);
}

# environment variables
$ENV{'LD_LIBRARY_PATH'} = "/usr/lib/mathworks/R14/v73/runtime/glnx86/:/usr/lib/mathworks/R14/v73/bin/glnx86:/usr/lib/mathworks/R14/v73/sys/java/jre/glnx86/jre1.5.0/lib/i386:/usr/lib/mathworks/R14/v73/sys/os/glnx86:/usr/lib/mathworks/R14/v73/sys/java/jre/glnx86/jre1.5.0/lib/i386/client:$ENV{'LD_LIBRARY_PATH'}";
$ENV{'PATH'} = "${bindir}:$ENV{'PATH'}";
$ENV{'XAPPLRESDIR'} = "${mcrroot}/X11/app-defaults:$ENV{'XAPPLRESDIR'}";

# Displat inputs
print(OUT "input arguments: @ARGV\n");
print(OUT "\nPATH=\n$ENV{'PATH'}\n");
print(OUT "\nLD_LIBRARY_PATH=\n$ENV{'LD_LIBRARY_PATH'}\n");
print(OUT "\nXAPPLRESDIR=\n$ENV{'XAPPLRESDIR'}\n");

# Parse inputs
my $pfile = sprintf("P%05s.7",$ARGV[0]);

# Backup Pfiles
($sec,$min,$hour,$mday,$mon,$year) = localtime(time);
my $timestr = sprintf("%4d%02d%02d_%02d%02d%02d",$year+1900,$mon+1,$mday,$hour,$min,$sec);
$cmdstr = "echo 'Fix this to backup pfile...'";
#$cmdstr = "cp ${mrrawdir}/${pfile} ${datadir}${timestr}_${pfile}";
print(OUT "\n${cmdstr}\n");
 ! system($cmdstr) || die("Error: cannot copy; $cmdstr");

# actual execution of matlab compiled program
chdir($bindir);
$cmdstr = "./flipAngleCalibration ${mrrawdir}/${pfile}";

print(OUT "\n${cmdstr}\n");
close(OUT);
 ! system($cmdstr) || die("Error: cannot execute: $cmdstr");

exit(0);
